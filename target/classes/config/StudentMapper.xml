<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ajin.mybatis.mapper.StudentMapper">
    <!--sql片段
      id：sql片段的唯一标识
      经验：一般基于单表地定义sql片段,这样可重用性比较高，sql片段中不要包含 where
      第一步：定义sql片段
      第二步：引用sql片段
    -->
    <sql id="select_student">
        <if test="student!=null">
            <if test="student.sname!=null and student.sname!=''">
                and s.sname=#{student.sname}
            </if>
            <if test="student.ssex!=null and student.ssex!=''">
                and s.ssex=#{student.ssex}
            </if>
            <if test="ids !=null">
                <!-- 使用foreach来遍历查询条件中的集合属性
                 collection指定查询对象中的集合属性：
                 item:遍历对象中
                 open：开始时拼接字符串
                 close：结束拼接字符串
                 separator：遍历中间需要拼接的串
                -->
                <foreach collection="ids" item="s_id" open="and (" close=")" separator="or">
                    id=#{s_id}
                </foreach>
            </if>
        </if>
    </sql>

    <!--使用if判断条件是否为空，进行查询sql语句的拼接-->
    <select id="selectStudentMul" parameterType="com.ajin.mybatis.model.StudentVo" resultType="com.ajin.mybatis.model.Student">
        <!-- select * from student where sname=#{student.sname} and ssex =#{student.ssex}
           一定要注意上面这句话是否时真的注释成功了，就是满足xml文件注释的格式，否则不小心会发现虽然注释了，但是最终运行会报错，并没有被注释掉
        -->
        select * from student s
           <!-- 使用where标签可以自动去掉第一个and 很方便-->
           <where>
               <!--
               <if test="student!=null">
                   <if test="student.sname!=null and student.sname!=''">
                            and s.sname=#{student.sname}
                   </if>
                   <if test="student.ssex!=null and student.ssex!=''">
                       and s.ssex=#{student.ssex}
                   </if>
               </if>
               -->
               <!-- 引用sql片段的id，引用其它文件中的需要加上namespace-->
               <include refid="select_student"></include>
               <!-- 在这里还要引用其它的sql片段-->
           </where>
    </select>
</mapper>